# -*- coding: utf-8 -*-
import os
import sys
import random
import time

import telebot
import flask

import usertypes
import database
import panels
import utils
import contents

# pip install pytelegrambotapi --upgrade
# pip install pytelegramAPI


API_TOKEN = os.environ['TOKEN']

WEBHOOK_DOMAIN = 'https://0866f6ebac8e.ngrok.io'
WEBHOOK_HOST = '%s/%s/' % (WEBHOOK_DOMAIN, API_TOKEN)

WEBHOOK_LISTEN = 'localhost'
WEBHOOK_PORT = 8443

WEBHOOK_URL = "/%s/" % API_TOKEN


bot = telebot.TeleBot(API_TOKEN)
app = flask.Flask(__name__)


@app.route('/', methods=['GET', 'HEAD'])
def index():
    return ''


@app.route(WEBHOOK_URL, methods=['POST'])
def webhook():
    if flask.request.headers.get('content-type') == 'application/json':
        json_string = flask.request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        flask.abort(403)


class Handler:
	def __init__(self, sessions: utils.Session, chat: utils.Chat):
		Handler._session = sessions
		Handler._chat = chat
		Handler._admin_panel = None
		Handler._moder_panel = None

	
	@staticmethod
	def set_admin_panel(admin_panel):
		Handler._admin_panel = admin_panel

	
	@staticmethod
	def set_moder_panel(moder_panel):
		Handler._moder_panel = moder_panel
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞
	@staticmethod
	@bot.message_handler(commands=['start'])
	def start_handler(message: telebot.types.Message):
		# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏ 
		if(not Handler._session.has_user_by_chat_id(message.chat.id)):
			# 
			Handler._session.append_user(usertypes.Visitor(message.chat.id, message.chat.first_name))

			bot.send_message(message.chat.id, 'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É—é—Ç–Ω—ã–π –¥–∏–∞–ª–æ–≥!')
	
		elif(Handler._session.is_user_visitor_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, 'üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º')

		elif(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚ú¥Ô∏è‚ú¥Ô∏è –í—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä ‚ú¥Ô∏è‚ú¥Ô∏è', 
				reply_markup=Handler._moder_panel.menu())
		 
		elif(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚öúÔ∏è‚öúÔ∏è –í—ã –≥–ª–∞–≤–Ω—ã–π ‚öúÔ∏è‚öúÔ∏è', reply_markup=Handler._admin_panel.menu())
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
	@staticmethod
	@bot.message_handler(commands=['moder'])
	def requests_handler(message: telebot.types.Message):
		# –ï—Å–ª–∏ –Ω–µ–±—ã–ª–æ –∫–æ–º–∞–Ω–¥—ã /start –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —Å—Ä–∞–∑—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ '–∑–∞–ø—É—Å–∫–∞–µ—Ç' –±–æ—Ç–∞
		if(not Handler._session.has_user_by_chat_id(message.chat.id)):
			Handler.start_handler(message)

		if(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚öúÔ∏è‚öúÔ∏è –í—ã –≥–ª–∞–≤–Ω—ã–π ‚öúÔ∏è‚öúÔ∏è')

		elif(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚ú¥Ô∏è‚ú¥Ô∏è –í—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä ‚ú¥Ô∏è‚ú¥Ô∏è')

		elif(Handler._session.has_requests_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚ö†Ô∏è ‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ ‚ö†Ô∏è ‚ö†Ô∏è')

		elif(message.text == '/moder'):
			Handler._session.append_requests(message.chat.id, message.chat.first_name)
			bot.send_message(message.chat.id, 'üì´ –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ')

		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.')	
	
	# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
	@staticmethod
	@bot.message_handler(content_types=['text', 'photo', 'document'])
	def text_handler(message: telebot.types.Message):
		# –ï—Å–ª–∏ –Ω–µ–±—ã–ª–æ –∫–æ–º–∞–Ω–¥—ã /start –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —Å—Ä–∞–∑—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ '–∑–∞–ø—É—Å–∫–∞–µ—Ç' –±–æ—Ç–∞
		if(not Handler._session.has_user_by_chat_id(message.chat.id)):
			Handler.start_handler(message)

		elif(Handler._session.is_user_blocked_by_chat_id(message.chat.id)):
			bot.send_message(message.chat.id, '‚ÄºÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã ‚ÄºÔ∏è')

		elif(message.text == '[ ‚ô†Ô∏è –î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ ‚ô†Ô∏è ]'):
			if(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
				requests = Handler._session.export_requests()
				markup, body = Handler._admin_panel.adition_moderators(requests)
				bot.send_message(message.chat.id, body, reply_markup=markup)
			else:
				markup = panels.clearn_menu()
				bot.send_message(message.chat.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)

		elif(message.text == '[ üíé –í—Å–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ üíé ]'):
			if(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
				managers = Handler._session.export_managers()
				markup, body = Handler._admin_panel.managers(managers)
				bot.send_message(message.chat.id, body, reply_markup=markup)
			else:
				markup = panels.clearn_menu()
				bot.send_message(message.chat.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)

		elif(message.text == '[ üîï –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ üîï ]'):
			if(Handler._session.is_user_administrator_by_chat_id(message.chat.id) or Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
				blocked_users = Handler._session.export_blocked_users()
				markup, body = Handler._admin_panel.blacklist(blocked_users)
				bot.send_message(message.chat.id, body, reply_markup=markup)
			else:
				markup = panels.clearn_menu()
				bot.send_message(message.chat.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)

		elif(message.text == '[ ‚öôÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞ ‚öôÔ∏è ]'):
			if(Handler._session.is_user_administrator_by_chat_id(message.chat.id) or Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
				text = ''
				if(Handler._session.is_admin_chat_work):
					text += '\n‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'
				else:
					text += '\nüõë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'

				if(Handler._session.is_users_chat_work):
					text += '\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'
				else:
					text += '\nüõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'

				bot.send_message(message.chat.id, text)
			else:
				markup = panels.clearn_menu()
				bot.send_message(message.chat.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)

		elif(message.text in ('[ üõë –û—Ç–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç üõë ]', 
			'[ ‚úÖ –í–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π  —á–∞—Ç ‚úÖ ]', 
			'[ üõë –û—Ç–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç üõë ]', 
			'[ ‚úÖ –í–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç ‚úÖ ]')):

			if(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
				if(message.text == '[ üõë –û—Ç–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç üõë ]'):
					Handler._session.disable_users_chat()

				if(message.text == '[ ‚úÖ –í–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π  —á–∞—Ç ‚úÖ ]'):
					Handler._session.enable_users_chat()

				if(message.text == '[ üõë –û—Ç–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç üõë ]'):
					Handler._session.disable_admin_chat()

				if(message.text == '[ ‚úÖ –í–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç ‚úÖ ]'):
					Handler._session.enable_admin_chat()

				# –†–∞–∑—Å—ã–ª–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã
				for manager in Handler._session.export_managers():

					if(Handler._session.is_user_moderator_by_chat_id(manager.chat_id)):
						if(message.text == '[ üõë –û—Ç–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç üõë ]'):
							text = 'üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'
						
						elif(message.text == '[ ‚úÖ –í–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π  —á–∞—Ç ‚úÖ ]'):
							text = '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'

						elif(message.text == '[ üõë –û—Ç–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç üõë ]'):
							text = 'üõë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'

						elif(message.text == '[ ‚úÖ –í–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç ‚úÖ ]'):
							text = '‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'
						
						else:
							text = '‚ö† –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞'

						bot.send_message(manager.chat_id, text)
					
					# 
					elif(Handler._session.is_user_administrator_by_chat_id(manager.chat_id)):
						if(message.text == '[ üõë –û—Ç–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç üõë ]'):
							text = 'üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'
						
						elif(message.text == '[ ‚úÖ –í–∫–ª. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π  —á–∞—Ç ‚úÖ ]'):
							text = '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'

						elif(message.text == '[ üõë –û—Ç–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç üõë ]'):
							text = 'üõë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω'

						elif(message.text == '[ ‚úÖ –í–∫–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç ‚úÖ ]'):
							text = '‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –≤–∫–ª—é—á–µ–Ω'
						
						else:
							text = '‚ö† –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞'

						bot.send_message(manager.chat_id, text, reply_markup=Handler._admin_panel.menu())
					
					else:
						bot.send_message(manager.chat_id, '‚ö† –í—ã —Ä–µ—à–µ–Ω—ã —Å–≤–æ—Ö–∏ –ø—Ä–∞–≤',
							reply_markup=panels.clearn_menu())
			else:
				bot.send_message(message.chat.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã', 
					reply_markup=panels.clearn_menu())

		elif(Handler._session.is_user_manager_by_chat_id(message.chat.id)):
			if(Handler._session.is_admin_chat_work):
				# 
				nickname = Handler._session.get_user_nickname_by_chat_id(message.chat.id)
				# 
				if(message.text):
					message_wrapper = contents.Text(nickname, message.chat.id, message.message_id, message.text).get()

				if(message.photo):
					message_wrapper = contents.Photo(nickname, message.chat.id, 
						message.message_id, message.photo[-1].file_id, message.caption).get()

				if(message.document):
					message_wrapper = contents.Document(nickname, message.chat.id, 
						message.message_id, message.document.file_id, message.caption).get()

				Handler._chat.append_message(message_wrapper)

				# –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª—è—é—â–∏–º
				for visitor in Handler._session.export_visitors():
					Handler.process_manager_message(visitor.chat_id, message_wrapper)
			else:
				bot.send_message(message.chat.id, '‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω!')

		elif(Handler._session.is_user_visitor_by_chat_id(message.chat.id)):
			if(Handler._session.is_users_chat_work):
				# 
				if(message.text):
					message_wrapper = contents.Text(message.chat.first_name, message.chat.id, 
						message.message_id, message.text)

				if(message.photo):
					message_wrapper = contents.Photo(message.chat.first_name, message.chat.id, 
						message.message_id, message.photo[-1].file_id, message.caption)

				if(message.document):
					message_wrapper = contents.Document(message.chat.first_name, message.chat.id, 
						message.message_id, message.document.file_id, message.caption)

				# –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª—è—é—â–∏–º
				for manager in Handler._session.export_managers():
					Handler.process_user_message(manager.chat_id, message_wrapper)
				
				Handler._chat.append_message(message_wrapper)

			else:
				bot.send_message(message.chat.id, '‚ö†Ô∏è –ß–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω!')
		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞')

	# –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
	@staticmethod
	def process_user_message(chat_id: int, message: contents.Message):
		message_id = message.message_id

		markup = Handler.make_markup(message)

		if(message.message):
			body = '–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>%s</b>\n\n%s\n\nüî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]' % (message.username, message.message)

			callback_message = bot.send_message(chat_id, body, parse_mode='HTML', reply_markup=markup)

		if(message.photo_id):
			if(message.caption):
				body = '–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>%s</b>\n\n%s\n\nüî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]' % (message.username, message.caption)
			else:
				body = '–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>%s</b>\n\nüî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]' % message.username

			callback_message = bot.send_photo(chat_id, message.photo_id, 
				caption=body, parse_mode='HTML', reply_markup=markup)

		if(message.document_id):
			if(message.caption):
				body = '–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>%s</b>\n\n%s\n\nüî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]' % (message.username, message.caption)
			else:
				body = '–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>%s</b>\n\nüî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]' % message.username

			callback_message = bot.send_document(chat_id, message.document_id, 
				caption=body, parse_mode='HTML', reply_markup=markup)	
		# 
		message.update(body)
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
		message.add_recipient_chat_and_message_id(chat_id, callback_message.message_id)


	@staticmethod
	def process_manager_message(chat_id: int, message: contents.Message):
		message_id = message.message_id

		markup = telebot.types.InlineKeyboardMarkup()

		if(message.message):
			body = '–û—Ç: <b>%s</b>\n\n%s\n\n' % (message.username, message.message)

			callback_message = bot.send_message(chat_id, body, parse_mode='HTML', reply_markup=markup)

		if(message.photo_id):
			if(message.caption):
				body = '–û—Ç: <b>%s</b>\n\n%s\n\n' % (message.username, message.caption)
			else:
				body = '–û—Ç: <b>%s</b>\n\n' % message.username

			callback_message = bot.send_photo(chat_id, message.photo_id, 
				caption=body, parse_mode='HTML', reply_markup=markup)

		if(message.document_id):
			if(message.caption):
				body = '–û—Ç: <b>%s</b>\n\n%s\n\n' % (message.username, message.caption)
			else:
				body = '–û—Ç: <b>%s</b>\n\n' % message.username

			callback_message = bot.send_document(chat_id, message.document_id, 
				caption=body, parse_mode='HTML', reply_markup=markup)

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
		message.add_recipient_chat_and_message_id(chat_id, callback_message.message_id)


	@staticmethod
	def make_markup(message_wrapper: contents.Message):
		markup = telebot.types.InlineKeyboardMarkup()
		markup.add(
			telebot.types.InlineKeyboardButton('–û—Ç–≤–µ—Ç–æ–≤ (%i)' % message_wrapper.amount_responses, 
				callback_data='reply?%s' % message_wrapper.id),
		 	telebot.types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å', 
		 		callback_data='send?%s' % message_wrapper.id)
		)

		if(Handler._session.is_user_blocked_by_chat_id(message_wrapper.chat_id)):
			markup.add(
				telebot.types.InlineKeyboardButton('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 
					callback_data='unblock?%s' % message_wrapper.id)
			)
		
		else:
			markup.add(
				telebot.types.InlineKeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', 
					callback_data='block?%s' % message_wrapper.id)
			)

		return markup


	@staticmethod
	def make_body(message: telebot.types.Message, message_wrapper: contents.Message):
		if(not message_wrapper.has_response()):
			text = message_wrapper.body
			nickname = Handler._session.get_user_nickname_by_chat_id(message.chat.id)
			text = text.replace('üî¥ [ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ ]', 'üîµ [ –û—Ç–≤–µ—Ç–∏–ª: <b>%s</b> ]:\n\n' % nickname)
			if(message.text):
				text += message.text
			if(message.photo):
				text += '–û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ'
			if(message.document):
				text += '–û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–∞–π–ª'
		else:
			text = message_wrapper.body
			nickname = Handler._session.get_user_nickname_by_chat_id(message.chat.id)
			text += '\n\nüîµ [ –û—Ç–≤–µ—Ç–∏–ª: <b>%s</b> ]:\n\n' % nickname
			if(message.text):
				text += message.text
			if(message.photo):
				text += '–û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ'
			if(message.document):
				text += '–û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–∞–π–ª'

		# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		message_wrapper.update(text)
		# 
		message_wrapper.add_response()

		admin_panel = Handler.make_markup(message_wrapper)

		return message_wrapper, admin_panel

	# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–æ–≤
	@staticmethod
	@bot.callback_query_handler(func=lambda callback: True)
	def callback_handler(callback: telebot.types.CallbackQuery):
		# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
		def send_mail(message: telebot.types.Message, message_wrapper: contents.Message):
			if(message.text == '[ ‚ö†Ô∏è –û—Ç–º–µ–Ω–∞ ‚ö†Ô∏è ]'):
				if(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω ‚ö†Ô∏è', reply_markup=Handler._moder_panel.menu())
				# 
				elif(Handler._session.is_user_administrator_by_chat_id(message.chat.id)): 
					bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω ‚ö†Ô∏è', reply_markup=Handler._admin_panel.menu())
				
				else:
					bot.send_message(message.chat.id, '‚ö† –£–ø—Å. —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', reply_markup=panels.clearn_menu())
			
			else:
				# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–∞ –æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ
				nickname = Handler._session.get_user_nickname_by_chat_id(message.chat.id)
				# 
				if(message.text):
					answer = contents.Text(nickname, message.chat.id, message.message_id, message.text).get()

				if(message.photo):
					answer = contents.Photo(nickname, message.chat.id, 
						message.message_id, message.photo[-1].file_id, message.caption).get()

				if(message.document):
					answer = contents.Document(nickname, message.chat.id, 
						message.message_id, message.document.file_id, message.caption).get()
				# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 
				Handler._chat.append_message(answer)
				# –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É answers —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞–π–¥–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				# –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–æ–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
				Handler._chat.bind_answer(message.chat.id, message_wrapper.chat_id, answer.id)
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –µ–≥–æ –∞–≤—Ç–æ—Ä—É
				if(message.text):
					bot.send_message(message_wrapper.chat_id, '–û—Ç: <b>%s</b>\n\n%s' % (nickname, message.text), 
						reply_to_message_id=message_wrapper.message_id, parse_mode='HTML')
				
				if(message.photo):
					caption = '\n\n' + message.caption if(message.caption) else ''
					bot.send_photo(message_wrapper.chat_id, message.photo[-1].file_id, 
						caption='–û—Ç: <b>%s</b>%s' % (nickname, caption), parse_mode='HTML')
				
				if(message.document):
					caption = '\n\n' + message.caption if(message.caption) else ''
					bot.send_document(message_wrapper.chat_id, message.document.file_id, 
						caption='–û—Ç: <b>%s</b>%s' % (nickname, caption), parse_mode='HTML')

				if(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚òëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚òëÔ∏è' % message_wrapper.username, 
						reply_markup=Handler._moder_panel.menu())
				# 
				elif(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚òëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚òëÔ∏è' % message_wrapper.username, 
						reply_markup=Handler._admin_panel.menu())
				else:
					bot.send_message(message.chat.id, '‚òëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚òëÔ∏è' % message_wrapper.username, 
						reply_markup=panels.clearn_menu())

		# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
		def enter_text(message: telebot.types.Message, message_wrapper: contents.Message):
			if(message.text == '[ ‚ö†Ô∏è –û—Ç–º–µ–Ω–∞ ‚ö†Ô∏è ]'):
				if(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω ‚ö†Ô∏è', 
						reply_markup=Handler._moder_panel.menu())
				# 
				elif(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚ö†Ô∏è –û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω ‚ö†Ô∏è', 
						reply_markup=Handler._admin_panel.menu())
				else:
					bot.send_message(message.chat.id, '‚ö† –£–ø—Å. —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', 
						reply_markup=panels.clearn_menu())
			else:
				message_wrapper, admin_panel = Handler.make_body(message, message_wrapper)
				# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∏–∫–∞ –æ—Ç–≤–µ—á–∞—é—â–µ–≥–æ
				nickname = Handler._session.get_user_nickname_by_chat_id(message.chat.id)
				# 
				if(message.text):
					answer = contents.Text(nickname, message.chat.id, message.message_id, message.text).get()

				if(message.photo):
					answer = contents.Photo(nickname, message.chat.id, 
						message.message_id, message.photo[-1].file_id, message.caption).get()

				if(message.document):
					answer = contents.Document(nickname, message.chat.id, 
						message.message_id, message.document.file_id, message.caption).get()
				# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è 
				print('update_message')
				Handler._chat.update_message(message_wrapper)
				# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 
				Handler._chat.append_message(answer)
				# –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É answers —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞–π–¥–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				# –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–æ–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
				Handler._chat.bind_answer(message.chat.id, message_wrapper.chat_id, answer.id)
				# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
				if(message.text):
					bot.send_message(message_wrapper.chat_id, '–û—Ç: <b>%s</b>\n\n%s' % (nickname, message.text), 
						reply_to_message_id=message_wrapper.message_id, parse_mode='HTML')
				
				if(message.photo):
					caption = '\n\n' + message.caption if(message.caption) else ''
					bot.send_photo(message_wrapper.chat_id, message.photo[-1].file_id, 
						caption='–û—Ç: <b>%s</b>%s' % (nickname, caption), parse_mode='HTML')
				
				if(message.document):
					caption = '\n\n' + message.caption if(message.caption) else ''
					bot.send_document(message_wrapper.chat_id, message.document.file_id, 
						caption='–û—Ç: <b>%s</b>%s' % (nickname, caption), parse_mode='HTML')
				
				# –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Ö, –∫—Ç–æ –µ–≥–æ –ø–æ–ª—É—á–∏–ª
				for recipient in message_wrapper.get_recipients().items():
					chat_id, message_id = recipient
					if(message_wrapper.message):
						bot.edit_message_text(chat_id=chat_id, message_id=message_id, 
							text=message_wrapper.body, parse_mode='HTML', reply_markup=admin_panel)
					else:
						bot.edit_message_caption(chat_id=chat_id, message_id=message_id, 
							caption=message_wrapper.body, parse_mode='HTML', reply_markup=admin_panel)

				if(Handler._session.is_user_moderator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚òëÔ∏è –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚òëÔ∏è',
						reply_markup=Handler._moder_panel.menu())

				# 
				elif(Handler._session.is_user_administrator_by_chat_id(message.chat.id)):
					bot.send_message(message.chat.id, '‚òëÔ∏è –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚òëÔ∏è', 
						reply_markup=Handler._admin_panel.menu())
				
				else:
					bot.send_message(message.chat.id, '‚ö† –£–ø—Å. —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', 
						reply_markup=panels.clearn_menu())

		# –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		if(callback.data.startswith('reply')):
			if(Handler._session.is_user_manager_by_chat_id(callback.message.chat.id)):
				message_id = callback.data[callback.data.index('?')+1:]
				if(Handler._chat.has_user_message(message_id)):
					# 
					message = Handler._chat.select_message(message_id)
					# 
					if(Handler._session.has_user_by_chat_id(message.chat_id)):
						bot.answer_callback_query(callback.id, '‚úÖ –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úÖ')
						bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è: %s' % message.username, reply_markup=panels.cancel_menu())
						bot.register_next_step_handler(callback.message, lambda handler: enter_text(handler, message))
					else:
						bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
				else:
					bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
			else:
				# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ª–∏—à—ë–Ω–Ω—ã—Ö –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
				bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –í—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', 
					reply_markup=panels.clearn_menu())
	
		# –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
		if callback.data.startswith('send'):
			if(Handler._session.is_user_manager_by_chat_id(callback.message.chat.id)):
				message_id = callback.data[callback.data.index('?')+1: ]
				if(Handler._chat.has_user_message(message_id)):
					# 
					message = Handler._chat.select_message(message_id)

					if(Handler._session.has_user_by_chat_id(message.chat_id)):
						bot.answer_callback_query(callback.id, '‚úÖ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úÖ')
						bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è: %s' % message.username, 
							reply_markup=panels.cancel_menu())
						bot.register_next_step_handler(callback.message, lambda event: send_mail(event, message))
					else:
						bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
				else:
					bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
			else:
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
				bot.send_message(callback.message.chat.id, '–í—ã –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', 
					reply_markup=panels.clearn_menu())

		# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–∑–≤–∞–Ω–∞—è —Å –ø–∞–Ω–µ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
		if(callback.data.startswith('block')):
			if(Handler._session.is_user_manager_by_chat_id(callback.message.chat.id)):
				message_id = callback.data[callback.data.index('?')+1: ]
				if(Handler._chat.has_user_message(message_id)):
					# 
					message = Handler._chat.select_message(message_id)
					# 
					if(Handler._session.has_user_by_chat_id(message.chat_id)):
						# 
						Handler._session.block_user_by_chat_id(message.chat_id)
						bot.send_message(message.chat_id, 'üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã! üö´')
						bot.answer_callback_query(callback.id, '‚úÖ  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ')
						# 
						admin_panel = Handler.make_markup(message)
						# 
						bot.edit_message_reply_markup(chat_id=callback.message.chat.id, 
							message_id=callback.message.message_id, reply_markup=admin_panel)
						# –†–∞c—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º
						for manager in Handler._session.export_managers():
							bot.send_message(manager.chat_id, 'üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω üö´' % message.username)
					else:
						bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
				else:
					bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
			else:
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
				bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –í—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!', 
					reply_markup=panels.clearn_menu())

		# –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–∑–≤–∞–Ω–∞—è —Å –ø–∞–Ω–µ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
		if(callback.data.startswith('unblock')):
			if(Handler._session.is_user_manager_by_chat_id(callback.message.chat.id)):
				message_id = callback.data[callback.data.index('?')+1: ]
				if(Handler._chat.has_user_message(message_id)):
					# 
					message = Handler._chat.select_message(message_id)

					if(Handler._session.has_user_by_chat_id(message.chat_id)):

						if(Handler._session.is_user_blocked_by_chat_id(message.chat_id)):
							# 
							Handler._session.unblock_user_by_chat_id(message.chat_id)
							bot.send_message(message.chat_id, '‚úÖ –í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ')
							bot.answer_callback_query(callback.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ')
							# 
							admin_panel = Handler.make_markup(message)
							# 
							if(message.message):
								bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, 
									text=message.body, parse_mode='HTML', reply_markup=admin_panel)
							else:
								bot.edit_message_caption(chat_id=chat_id, message_id=message_id, 
									caption=message.body, parse_mode='HTML', reply_markup=admin_panel)
							# –†–∞c—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
							for manager in Handler._session.export_managers():
								bot.send_message(manager.chat_id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ' % message.username)
						else:
							bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')
							# –ò–∑–º–µ–Ω—è–µ–º –ø–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–æ–≤—ã–µ
							admin_panel = Handler.make_markup(message)
							# 
							bot.edit_message_reply_markup(chat_id=callback.message.chat.id, 
								message_id=callback.message.message_id, reply_markup=admin_panel)
					else:
						bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
				else:
					bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
			else:
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
				bot.send_message(callback.message.chat.id, '–í—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!', 
					reply_markup=panels.clearn_menu())
		
		# –†–∞p–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–∑–≤–∞–Ω–∞—è —Å —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
		if(callback.data.startswith('blacklist')):
			if(Handler._session.is_user_manager_by_chat_id(callback.message.chat.id)):
				try:
					chat_id = int(callback.data[callback.data.index('?')+1: callback.data.index('&')])
				except(ValueError):
					bot.send_message(callback.message.chat.id, 'üÜò –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				
				username = callback.data[callback.data.index('&')+1: ]

				if(Handler._session.has_user_by_chat_id(chat_id)):
					if(Handler._session.is_user_blocked_by_chat_id(chat_id)):
						# 
						Handler._session.unblock_user_by_chat_id(chat_id)
						bot.send_message(chat_id, '‚úÖ –í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ')
						bot.answer_callback_query(callback.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ')

						# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ 
						blocked_users = Handler._session.export_blocked_users()
						markup, body = Handler._admin_panel.blacklist(blocked_users)
						
						bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, 
							text=body, reply_markup=markup, parse_mode='HTML')

						# –†–∞c—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
						for manager in Handler._session.export_managers():
							bot.send_message(manager.chat_id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚úÖ' % username)
					else:
						bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')
				else:
					bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
			else:
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
				bot.send_message(callback.message.chat.id, '‚ö† –í—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!', 
					reply_markup=panels.clearn_menu())

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
		if callback.data.startswith('add_moder'):
			try:
				chat_id = int(callback.data[callback.data.index('?')+1: callback.data.index('&')])
			except(ValueError):
				bot.send_message(callback.message.chat.id, 'üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
			
			username = callback.data[callback.data.index('&')+1: ]

			# –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 
			bot.send_message(chat_id, '‚ô†Ô∏è –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä! ‚ô†Ô∏è', reply_markup=Handler._moder_panel.menu())
			bot.answer_callback_query(callback.id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä %s –¥–æ–±–∞–≤–ª–µ–Ω!' % username)
			bot.delete_message(callback.message.chat.id, callback.message.message_id)
			# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
			Handler._session.delete_requests_by_chat_id(chat_id)
			# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Å—Å–∏–∏
			Handler._session.delete_user_by_chat_id(chat_id)
			# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
			moderator = usertypes.Moderator(chat_id, username)
			# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞
			moderator.set_nickname('–ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: %i' % random.randint(1111, 9999))
			# 
			Handler._session.append_user(moderator)

		# –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
		if callback.data.startswith('delete'):
			try:
				chat_id = int(callback.data[callback.data.index('?')+1: callback.data.index('&')])
				username = callback.data[callback.data.index('&')+1: ]
			except(ValueError):
				bot.send_message(callback.message.chat.id, 'üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
			
			else:
				if(Handler._session.is_user_administrator_by_chat_id(callback.message.chat.id)):
					# –ó–∞—à–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
					if(Handler._session.is_user_administrator_by_chat_id(chat_id)):
						bot.answer_callback_query(callback.id, 'üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ª–∏—à–∏—Ç—å —Å–≤–æ–∏—Ö –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. üö´')
					else:
						bot.delete_message(callback.message.chat.id, callback.message.message_id)
						bot.send_message(chat_id, 'üö´ –í—ã –±—ã–ª–∏ –ª–∏—à–µ–Ω—ã —Å–≤–æ–∏—Ö –ø—Ä–∞–≤ üö´', reply_markup=panels.clearn_menu())
						# –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
						Handler._session.delete_user_by_chat_id(chat_id)
						# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
						Handler._session.append_user(usertypes.Visitor(chat_id, username))
						# –†–∞c—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
						for manager in Handler._session.export_managers():
							bot.send_message(manager.chat_id, 'üö´ %s –±—ã–ª –ª–∏—à–µ–Ω —Å–≤–æ–∏—Ö –ø—Ä–∞–≤ üö´' % username)
				else:
					bot.answer_callback_query(callback.id, '‚ö† –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')

		# –í—ã—Ö–æ–¥ —Å —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
		if callback.data.startswith('back_to_menu'):
			try:
				if(Handler._session.is_user_administrator_by_chat_id(callback.message.chat.id)):
					bot.send_message(callback.message.chat.id, '‚úÖ –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', 
						reply_markup=Handler._admin_panel.menu())
				# 
				elif(Handler._session.is_user_moderator_by_chat_id(callback.message.chat.id)):
					bot.send_message(callback.message.chat.id, '‚úÖ –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', 
						reply_markup=Handler._moder_panel.menu())
				else:
					bot.send_message(message.chat.id, '‚ö† –£–ø—Å. —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', 
						reply_markup=panels.clearn_menu())
				
				bot.delete_message(callback.message.chat.id, callback.message.message_id)
			
			except(NameError, AttributeError):
				bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞')
			
			except Exception as exc:
				bot.send_message(callback.message.chat.id, '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–∞—è –æ—à–∏–±–∫–∞: %s' % exc)


def main():
	os.chdir(os.path.dirname(sys.argv[0]))
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	db = database.SQLiteDatabase('mydatabase.db')
	# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–∏–ø–∞: —Å–µ—Å—Å–∏—è - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö. Session\Database Interface
	sdi = database.SessionDatabaseInterface(db)
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫ –Ω–µ–π
	session = utils.Session(sdi)
	# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–∏–ø–∞: —á–∞—Ç - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö. Chat\Database Interface
	cdi = database.ChatDatabaseInterface(db)
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫ –Ω–µ–º—É 
	chat = utils.Chat(cdi)
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –µ–º—É –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ Session –∏ Chat 
	handler = Handler(session, chat)
	# 
	handler.set_admin_panel(panels.AdminPanel(session))
	handler.set_moder_panel(panels.ModerPanel(session))

	if(WEBHOOK_DOMAIN != ''):
		bot.remove_webhook()
		time.sleep(1)
		bot.set_webhook(url=WEBHOOK_HOST)

		app.run(host=WEBHOOK_LISTEN, port=WEBHOOK_PORT, debug=True)

	else:
		bot.polling(none_stop=True, interval=0)


if(__name__ == '__main__'):
	main()